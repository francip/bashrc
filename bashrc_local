#!/bin/bash

# This file is not intended for direct execution
if [[ "${BASH_SOURCE[0]}" == "$0" ]]; then exit; fi

# Source local definitions

__bashrc_local_main() {
    local BASH_SOURCE_FILE BASH_SOURCE_DIR BASH_SOURCE_FILE_ESCAPED

    BASH_SOURCE_FILE=${BASH_SOURCE[0]}
    while [[ -L "$BASH_SOURCE_FILE" ]]; do
        BASH_SOURCE_FILE=$(readlink "$BASH_SOURCE_FILE")
    done

    BASH_SOURCE_DIR=$(dirname "$BASH_SOURCE_FILE")
    BASH_SOURCE_DIR=`cd "$BASH_SOURCE_DIR" >/dev/null; pwd`
    BASH_SOURCE_FILE=$(basename "$BASH_SOURCE_FILE")
    BASH_SOURCE_FILE_ESCAPED=${BASH_SOURCE_FILE// /_}

    # BASH_SOURCE_DIR is a full path to the location of this script

    eval "$(cat <<EOF
        __get_${BASH_SOURCE_FILE_ESCAPED}_dir() {
          echo $BASH_SOURCE_DIR
        }
        __get_${BASH_SOURCE_FILE_ESCAPED}_file() {
          echo $BASH_SOURCE_FILE
        }
EOF
)"

    eval "$(_bash_color_definitions)"
    eval "$(_bash_os_definitions)"

    local BASH_INTERACTIVE

    case $- in
    *i*)
        # interactive shell
        BASH_INTERACTIVE=1
        ;;
    esac

#    local BASH_FILES BASH_FILE

#    BASH_FILES=( some_local_file )
#    for BASH_FILE in ${BASH_FILES[@]}; do
#        if [ -f "$BASH_FILE" ]; then
#            [ $BASH_INTERACTIVE ] && echo -e 'Loading '$COLOR_GREEN_BOLD$BASH_FILE$COLOR_NONE
#            . "$BASH_FILE"
#        fi
#    done


    
    eval "
        __bashrc_local_run() {
            echo $(__get_${BASH_SOURCE_FILE_ESCAPED}_dir)'/'$(__get_${BASH_SOURCE_FILE_ESCAPED}_file)
        }
        __bashrc_local_dir() {
            echo $(__get_${BASH_SOURCE_FILE_ESCAPED}_dir)
        }
        __bashrc_local_file() {
            echo $(__get_${BASH_SOURCE_FILE_ESCAPED}_file)
        }
EOF
)"

    bashrc_local_run() {
        [ $BASH_INTERACTIVE ] && echo -e 'Executing local startup script from '$COLOR_GREEN_BOLD$(__bashrc_local_run)$COLOR_NONE
    }
}

__bashrc_local_main "$@"
unset __bashrc_local_main
